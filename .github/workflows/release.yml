name: Build & Release

on:
  push:
    # タグ（例: v1.0.0）をプッシュしたときに実行
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            ext: ".exe"
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: ""
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build with Cargo
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          # 各プラットフォーム毎に名前を付与
          name: my-cli-${{ matrix.os }}
          path: target/${{ matrix.target }}/release/my-cli${{ matrix.ext }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # 各プラットフォームの成果物をそれぞれダウンロード（保存先は artifacts/ 以下）
      - name: Download Ubuntu binary
        uses: actions/download-artifact@v4
        with:
          name: my-cli-ubuntu-latest
          path: artifacts/linux

      - name: Download Windows binary
        uses: actions/download-artifact@v4
        with:
          name: my-cli-windows-latest
          path: artifacts/windows

      - name: Download macOS binary
        uses: actions/download-artifact@v4
        with:
          name: my-cli-macos-latest
          path: artifacts/macos

      # GitHub Release の作成
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 各バイナリをリリースにアップロード
      - name: Upload Linux binary to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          asset_path: artifacts/linux/my-cli
          asset_name: my-cli-linux
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows binary to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          asset_path: artifacts/windows/my-cli.exe
          asset_name: my-cli-windows.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload macOS binary to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          asset_path: artifacts/macos/my-cli
          asset_name: my-cli-macos
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
